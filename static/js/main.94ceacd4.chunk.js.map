{"version":3,"sources":["square/square.js","board/board.js","game/game.js","app/app.js","index.js"],"names":["Square","props","value","active","onClick","classes","className","Board","i","this","winnerItems","findIndex","item","squares","nums","res","curFull","f","push","renderSquare","getBoardRow","React","Component","calculateWinner","lines","length","a","b","c","isWinner","items","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","href","key","class","jumpTo","historyBlock","find","cell","displayHistory","handleClick","TransitionGroup","CSSTransition","in","timeout","classNames","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94ceacd4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Square(props) {\r\n  const {value, active, onClick} = props;\r\n  let classes = 'btn btn-outline-primary square';\r\n  \r\n  if (active) classes += ' active';\r\n\r\n  return (\r\n    <button className={classes} onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from '../square/square';\r\n\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    let active = false;\r\n\r\n    if (this.props.winnerItems) {\r\n      active = this.props.winnerItems.findIndex(item => item === i) !== -1\r\n    }\r\n\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        active={active}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  getBoardRow(nums) {\r\n    let res = [];\r\n    const full = nums * nums;\r\n    let curFull = 0;\r\n    \r\n    const f = () => {\r\n      let res = [];\r\n\r\n      for(let i = 0; i < nums; i++) {\r\n        res.push(this.renderSquare(curFull++))\r\n      }\r\n\r\n      return res;\r\n    }\r\n\r\n    for(let i = 1; i <= nums; i++) {\r\n      res.push(\r\n        <div className=\"board-row\">\r\n          { f() }\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>{ this.getBoardRow(3) }</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport Board from '../board/board';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {\r\n        isWinner: squares[a],\r\n        items: [a, b, c]\r\n      };\r\n    }\r\n  }\r\n  return {\r\n    isWinner: null,\r\n    items: null\r\n  };\r\n}\r\n\r\nfunction isEndCells(squares) {\r\n  return squares.find(cell => cell === null) === null;\r\n}\r\n\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null)\r\n        }\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares).isWinner || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares\r\n        }\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <a href=\"#\" \r\n           key={move} \r\n           class=\"list-group-item list-group-item-action\"\r\n           onClick={() => this.jumpTo(move)} >\r\n          {desc}\r\n        </a>  \r\n      );\r\n    });\r\n\r\n    const historyBlock = (\r\n      <div className=\"game-info\">\r\n          {/* <ol>{moves}</ol> */}\r\n          <div class=\"list-group\">\r\n            <a href=\"#\" class=\"list-group-item list-group-item-action active\">\r\n            History\r\n            </a>\r\n            {moves}\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n    \r\n\r\n    let status;\r\n    if (winner.isWinner) {\r\n      status = \"Winner: \" + winner.isWinner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    if (!isEndCells(current.squares)) {\r\n      status = \"Draw\"\r\n    }\r\n\r\n    let displayHistory = this.state.stepNumber > 0;\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            winnerItems={winner.items}\r\n            onClick={i => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <TransitionGroup>\r\n          {displayHistory && (\r\n            <CSSTransition in={displayHistory} timeout={200} classNames=\"option\">\r\n              <div>\r\n                <h6 className=\"status\">{status}</h6>\r\n                {historyBlock}\r\n              </div>\r\n            </CSSTransition>\r\n          )}\r\n        </TransitionGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport Game from '../game/game';\r\n\r\n\r\nconst App = props => {\r\n  return (\r\n    <>\r\n      <h1>Tic tac toe</h1>\r\n      <Game />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/app';\n\nReactDOM.render(\n  <App />, \n  document.getElementById(\"root\"));\n"],"sourceRoot":""}